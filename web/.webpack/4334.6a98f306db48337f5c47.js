(()=>{var O={80859:(e,r,t)=>{"use strict";var p=t(90758),a=t(41253),o=t(16514),h=t(13791),b=t(17417),v=t(92897),y=t(44668),j=t(20865),P=t(88499);function R(w){const c=w.slice().sort((u,i)=>(0,y.compare)(u.startTime,i.startTime));let l={sec:-1/0,nsec:0},d=0;return c.forEach(({startTime:u,endTime:i})=>{(0,y.isLessThan)(u,l)&&(d+=1),(0,y.isGreaterThan)(i,l)&&(l=i)}),d}var _=t(94789),x=t(3400),E=t.n(x);class z{#t;#e;#s=new Map;#r=new Map;constructor(c){this.#t=c}async initialize(){await E().isLoaded;const c=await _.default.init();let l;if(this.#t.type==="remote"){const f=this.#t.url,n=new j.Z(f),g=new P.Z({fileReader:n,cacheSizeInBytes:1024*1024*200,keepReconnectingCallback:T=>{}});await g.open(),l=g}else l=new h.BlobReader(this.#t.file);this.#e=new o.N(l,{parse:!1,decompress:{bz2:(f,n)=>c.decompress(f,n,{small:!1}),lz4:(f,n)=>E()(f,n)}}),await this.#e.open();const d=[],u=R(this.#e.chunkInfos);if(u>this.#e.chunkInfos.length*.25){const f=`This bag has many overlapping chunks (${u} out of ${this.#e.chunkInfos.length}). This results in more memory use during playback.`,n="Re-sort the messages in your bag by receive time.";d.push({severity:"warn",message:f,tip:n})}const i=new Array(this.#e.connections.size).fill(0);this.#e.chunkInfos.forEach(f=>{f.connections.forEach(({conn:n,count:g})=>{i[n]+=g})});const m=new Map,k=new Map,M=new Map,C=new Map;for(const[f,n]of this.#e.connections){const g=n.type;if(!g)continue;let T=C.get(n.topic);T||(T=new Set,C.set(n.topic,T)),T.add(n.callerid??String(n.conn));const I=k.get(n.topic);I&&I.schemaName!==g&&d.push({severity:"warn",message:`Conflicting datatypes on topic (${n.topic}): ${g}, ${I.schemaName}`,tip:`Studio requires all connections on a topic to have the same datatype. Make sure all your nodes are publishing the same message on ${n.topic}.`}),I||k.set(n.topic,{name:n.topic,schemaName:g});const A=(M.get(n.topic)?.numMessages??0)+(i[n.conn]??0);M.set(n.topic,{numMessages:A});const $=(0,b.parse)(n.messageDefinition),N=new v.MessageReader($);this.#s.set(f,N),this.#r.set(f,g);for(const S of $)S.name?m.set(S.name,S):m.set(g,S)}return{topics:Array.from(k.values()),topicStats:M,start:this.#e.startTime??{sec:0,nsec:0},end:this.#e.endTime??{sec:0,nsec:0},problems:d,profile:"ros1",datatypes:m,publishersByTopic:C}}async*messageIterator(c){yield*this.#n({...c,reverse:!1})}async*#n(c){if(!this.#e)throw new Error("Invariant: uninitialized");const l=c.end,d=this.#e.messageIterator({topics:Array.from(c.topics.keys()),reverse:c.reverse,start:c.start}),u=this.#s;for await(const i of d){const m=i.connectionId,k=u.get(m);if(l&&(0,y.compare)(i.timestamp,l)>0)return;const M=this.#r.get(m);if(!M){yield{type:"problem",connectionId:m,problem:{severity:"error",message:`Cannot missing datatype for connection id ${m}`,tip:"Check that your bag file is well-formed. It should have a connection record for every connection id referenced from a message record."}};return}if(k){const C=i.data.slice(),f=k.readMessage(C);yield{type:"message-event",connectionId:m,msgEvent:{topic:i.topic,receiveTime:i.timestamp,sizeInBytes:i.data.byteLength,message:f,schemaName:M}}}else yield{type:"problem",connectionId:m,problem:{severity:"error",message:`Cannot deserialize message for missing connection id ${m}`,tip:"Check that your bag file is well-formed. It should have a connection record for every connection id referenced from a message record."}}}}async getBackfillMessages({topics:c,time:l}){const d=[];for(const u of c.entries())for await(const i of this.#n({topics:new Map([u]),start:l,reverse:!0})){i.type==="message-event"&&d.push(i.msgEvent);break}return d.sort((u,i)=>(0,y.compare)(u.receiveTime,i.receiveTime)),d}}function L(w){if(w.file){const c=new z({type:"file",file:w.file}),l=new a.a(c);return p.sj(l)}else if(w.url){const c=new z({type:"remote",url:w.url}),l=new a.a(c);return p.sj(l)}throw new Error("file or url required")}p.Jj(L)},63136:(e,r,t)=>{"use strict";t.d(r,{Z:()=>a});const a={nextTick:(o,...h)=>{queueMicrotask(()=>{o(...h)})},title:"browser",browser:!0,env:{},argv:[]}},62891:()=>{},16471:()=>{}},B={};function s(e){var r=B[e];if(r!==void 0)return r.exports;var t=B[e]={id:e,loaded:!1,exports:{}};return O[e].call(t.exports,t,t.exports,s),t.loaded=!0,t.exports}s.m=O,s.x=()=>{var e=s.O(void 0,[6635,4127,7979,8540,7372,2984,1343,4812],()=>s(80859));return e=s.O(e),e},(()=>{var e=[];s.O=(r,t,p,a)=>{if(t){a=a||0;for(var o=e.length;o>0&&e[o-1][2]>a;o--)e[o]=e[o-1];e[o]=[t,p,a];return}for(var h=1/0,o=0;o<e.length;o++){for(var[t,p,a]=e[o],b=!0,v=0;v<t.length;v++)(a&!1||h>=a)&&Object.keys(s.O).every(x=>s.O[x](t[v]))?t.splice(v--,1):(b=!1,a<h&&(h=a));if(b){e.splice(o--,1);var y=p();y!==void 0&&(r=y)}}return r}})(),s.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return s.d(r,{a:r}),r},s.d=(e,r)=>{for(var t in r)s.o(r,t)&&!s.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},s.f={},s.e=e=>Promise.all(Object.keys(s.f).reduce((r,t)=>(s.f[t](e,r),r),[])),s.u=e=>""+e+"."+{1343:"8f0b2ee4ce287e723c42",2984:"4584deb5c4e7b7650b12",4127:"5c877ad0841ccbd15e61",4812:"87ebb8f9866ab04a93c0",6635:"3176a27e01453488dad0",7372:"57aece328a81cb11d24f",7979:"5cc8f1665b0d9ca77f55",8540:"dd9a045242f404e72468"}[e]+".js",s.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),s.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),s.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var r=s.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");if(t.length)for(var p=t.length-1;p>-1&&!e;)e=t[p--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),(()=>{var e={4334:1,6548:1},r=a=>{var[o,h,b]=a;for(var v in h)s.o(h,v)&&(s.m[v]=h[v]);for(b&&b(s);o.length;)e[o.pop()]=1;p(a)};s.f.i=(a,o)=>{e[a]||importScripts(s.p+s.u(a))};var t=self.webpackChunk=self.webpackChunk||[],p=t.push.bind(t);t.push=r})(),(()=>{var e=s.x;s.x=()=>Promise.all([6635,4127,7979,8540,7372,2984,1343,4812].map(s.e,s)).then(e)})();var F=s.x()})();

//# sourceMappingURL=4334.6a98f306db48337f5c47.js.map